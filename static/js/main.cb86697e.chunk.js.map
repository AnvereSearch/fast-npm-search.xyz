{"version":3,"sources":["../../src/AnvereInstantsearchAdapter.js","../../src/Configuration.js","../../src/FacetSearchResponseAdapter.js","../../../src/support/utils.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","AnvereInstantsearchAdapter","this","configuration","Configuration","validate","searchClient","search","searchForFacetValues","server","nodes","applicationId","anvereUrlWithParams","URL","instantsearchRequests","anvereResponse","results","typesenseResponse","adaptedResponses","FacetSearchResponseAdapter","console","typesenseResult","options","host","routing_key","port","path","protocol","cacheSearchResultsForSeconds","additionalSearchParameters","queryBy","sortBy","highlightFullFields","geoLocationField","collectionSpecificSearchParameters","Object","overrideHighlightFullFields","length","c","instantsearchRequest","typesenseFacetCounts","facet","value","facetCount","highlighted","count","facetHits","_adaptFacetHits","exhaustiveFacetsCount","processingTimeMS","search_time_ms","utils","_adaptHighlightTag","RegExp","_adaptNumberOfPages","result","found","request_params","Number","Math","App","AnvereInstantSearchAdapter","className","href","InstantSearch","indexName","SearchBox","Hits","hitComponent","props","dangerouslySetInnerHTML","__html","hit","name","id","target","description","Configure","hitsPerPage","Pagination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEA,QACA,QACMA,EAAQC,EAAd,IAEqBC,E,WACnB,cAAsB,IAAD,6BACnBC,KAAKC,cAAgB,IAAIC,EAAJ,cAArB,GACAF,KAAKC,cAAcE,WACnBH,KAAKI,aAAe,CAClBC,OAAQ,mBAA2B,uBAA3B,IACRC,qBAAsB,mBACpB,qCADoB,K,gHAI1B,0GACQC,EAASP,KAAKC,cADtB,OAEQO,EAAQD,EAFhB,MAGQE,EAAgBD,KAHxB,eAKQE,EAAsB,IAAIC,IAAI,GAAR,OAAWH,KAAX,uBAAkCA,KAAlC,KAL9B,WAMEE,6BACAA,8BAAiDE,KAAjDF,WACAA,2BAA8CE,YAA9CF,OACAA,uCACAA,0BAA6CE,YAA7CF,MACAA,+BAAkDE,YAAlDF,aAXF,UAa+Bb,MAAUa,EAbzC,qBAaQG,EAbR,yBAeSA,EAfT,uD,wIAiBA,oHAEiCb,KAAA,6BAFjC,iBAEUa,EAFV,yBAGW,CACLC,QAAS,CAACD,KAJhB,oG,sJAWA,6HAG8Bb,KAAA,iCAH9B,iBAGIe,EAHJ,OAKUC,EAAmBD,EAAA,aAA8B,cAOrD,OANA,8BACwB,IAAIE,EAAJ,6BAEtBL,EAFsB,GAGtB,EAHF,eAKA,WAZN,2DAiBIM,oBAjBJ,8D,6FAsBA,YACE,GAAIC,EAAJ,MACE,MAAM,oBAAaA,EAAb,mBAAuCA,EAA7C,QAEF,IAAKA,EAAD,OAA0BA,EAA9B,aACE,MAAM,2CAAoCA,EAApC,mBAA8DA,EAApE,Y,qLCrEOjB,E,WACX,aAA2B,IAAD,OAAdkB,EAAc,uDAAJ,IAAI,qBACxBpB,KAAKO,OAASa,UAAkB,CAC9BZ,MAAO,CACL,CACEC,cADF,GAEEY,KAFF,YAGEC,YAHF,GAIEC,KAJF,KAKEC,KALF,GAMEC,SAAU,WAKhBzB,KAAKO,OAAOmB,6BACV,MAAA1B,KAAKO,OAAOmB,6BAAuC,IAAS1B,KAAKO,OADnE,6BAGAP,KAAK2B,2BAA6BP,8BAAlC,GAEApB,KAAK2B,2BAA2BC,QAAU5B,KAAK2B,2BAA2BC,SAA1E,GAEA5B,KAAK2B,2BAA2BE,OAAS7B,KAAK2B,2BAA2BE,QAAzE,GAEA7B,KAAK2B,2BAA2BG,oBAC9B9B,KAAK2B,2BAA2BG,qBAAuB9B,KAAK2B,2BAD9D,QAGA3B,KAAK+B,iBAAmBX,oBAAxB,UAEApB,KAAKgC,mCAAqCZ,sCAA1C,GAEAa,YAAYjC,KAAZiC,6CAA6D,YAC3D,IAAMC,EACJ,6DACA,wCAFF,QAGA,IACE,kE,6CAUN,WACE,GACE,IAAAlC,KAAK2B,2BAA2BC,QAAQO,QACxCF,OAAA,OAAcjC,KAAd,0CAA4D,wBAAQoC,WAAD,cAEnE,MAAM,UAAN,yJ,mLCnDN,QAEanB,E,WACX,iBAAsD,EAAD,mBACnDjB,KAAKe,kBAAL,EACAf,KAAKqC,qBAAL,E,oDAGF,YAAuC,IAAD,OAcpC,OAZcC,EAAA,MAA0B,mBAAWC,eAAqB,8BAAhC,aAExB,YAAiB,kBAAiB,CAChDC,MAAOC,EADyC,MAEhDC,YAAa,qBACXD,EADW,YAEX,8BAFW,gBAGX,8BAL8C,kBAOhDE,MAAOF,EAAWE,Y,mBAMtB,WAME,MALsB,CACpBC,UAAW5C,KAAK6C,gBAAgB7C,KAAKe,kBADjB,cAEpB+B,uBAFoB,EAGpBC,iBAAkB/C,KAAKe,kBAAkBiC,oB,oCAM/Cf,cAAchB,EAAdgB,UAAoDgB,EAApDhB,Q,gGCrCO,IAAMgB,EAAQ,CACnBC,mBADmB,gBAEjB,OAAOV,UACI,IAAIW,OAAO,SADfX,gBAEI,IAAIW,OAAO,UAFfX,KAAP,IAIFY,oBANmB,WAOjB,IAAMC,EAASrD,KAAKe,kBAAkBuC,MAAQtD,KAAKe,kBAAkBwC,eAArE,SACA,OAAIC,gBAAJ,GACSC,UAAP,GAEO,I,oKCmEEC,MAlEf,WACC,IAYMtD,EAZ6B,IAAIuD,IAA2B,CACjEpD,OAAQ,CACPC,MAAO,CACN,CACCC,cAAe,MACfY,KAAM,kBACNI,SAAU,aAMkCrB,aA4BhD,OACC,sBAAKwD,UAAU,MAAf,UACC,yBAAQA,UAAU,SAAlB,UACC,oBAAIA,UAAU,eAAd,SACC,mBAAGC,KAAK,IAAR,yCAED,oBAAGD,UAAU,kBAAb,sBAEC,mBAAGC,KAAK,8CAAR,6CAKF,qBAAKD,UAAU,YAAf,SACC,eAACE,EAAA,EAAD,CAAeC,UAAU,MAAM3D,aAAcA,EAA7C,UACC,cAAC4D,EAAA,EAAD,IACC,cAACC,EAAA,EAAD,CAAMC,aA1CC,SAACC,GACZ,OACC,gCACC,mBACCP,UAAU,WACVQ,wBAAyB,CACxBC,OAAM,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,IAAP,iBAA+BC,KAAK/B,OAE7CqB,KAAI,wCAAmCM,EAAMG,IAAIE,IACjDC,OAAO,WAER,qBACCb,UAAU,kBACVQ,wBAAyB,CACxBC,OAAM,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,IAAP,iBAA+BI,YACrClC,eA4BF,cAACmC,EAAA,EAAD,CAAWC,YAAa,IACzB,cAACC,EAAA,EAAD,aC3DUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb86697e.chunk.js","sourcesContent":["\"use strict\";\n\nimport { Configuration } from \"./Configuration\";\nimport { FacetSearchResponseAdapter } from \"./FacetSearchResponseAdapter\";\nconst axios = require(\"axios\");\n\nexport default class AnvereInstantsearchAdapter {\n  constructor(options) {\n    this.configuration = new Configuration(options);\n    this.configuration.validate();\n    this.searchClient = {\n      search: (instantsearchRequests) => this.searchAnvereAndAdapt(instantsearchRequests),\n      searchForFacetValues: (instantsearchRequests) =>\n        this.searchAnvereForFacetValuesAndAdapt(instantsearchRequests),\n    };\n  }\n  async adaptAndPerformAnvereRequest(instantsearchRequests) {\n    const server = this.configuration.server;\n    const nodes = server.nodes;\n    const applicationId = nodes[0].applicationId;\n\n    const anvereUrlWithParams = new URL(`${nodes[0].protocol}://${nodes[0].host}/docs`);\n    anvereUrlWithParams.searchParams.set(\"app_id\", applicationId);\n    anvereUrlWithParams.searchParams.set(\"index_id\", instantsearchRequests[0].indexName);\n    anvereUrlWithParams.searchParams.set(\"input\", instantsearchRequests[0].params.query);\n    anvereUrlWithParams.searchParams.set(\"highlight\", \"true\");\n    anvereUrlWithParams.searchParams.set(\"page\", instantsearchRequests[0].params.page);\n    anvereUrlWithParams.searchParams.set(\"page_size\", instantsearchRequests[0].params.hitsPerPage);\n\n    const anvereResponse = await axios.get(anvereUrlWithParams.href);\n\n    return anvereResponse.data;\n  }\n  async searchAnvereAndAdapt(instantsearchRequests) {\n    try {\n      const anvereResponse = await this.adaptAndPerformAnvereRequest(instantsearchRequests);\n      return {\n        results: [anvereResponse],\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async searchAnvereForFacetValuesAndAdapt(instantsearchRequests) {\n    let typesenseResponse;\n    try {\n      typesenseResponse = await this._adaptAndPerformTypesenseRequest(instantsearchRequests);\n\n      const adaptedResponses = typesenseResponse.results.map((typesenseResult, index) => {\n        this._validateTypesenseResult(typesenseResult);\n        const responseAdapter = new FacetSearchResponseAdapter(\n          typesenseResult,\n          instantsearchRequests[index],\n          this.configuration\n        );\n        return responseAdapter.adapt();\n      });\n\n      return adaptedResponses;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  _validateTypesenseResult(typesenseResult) {\n    if (typesenseResult.error) {\n      throw new Error(`${typesenseResult.code} - ${typesenseResult.error}`);\n    }\n    if (!typesenseResult.hits && !typesenseResult.grouped_hits) {\n      throw new Error(`Did not find any hits. ${typesenseResult.code} - ${typesenseResult.error}`);\n    }\n  }\n}\n","\"use strict\";\n\nexport class Configuration {\n  constructor(options = {}) {\n    this.server = options.server || {\n      nodes: [\n        {\n          applicationId: \"\",\n          host: \"localhost\",\n          routing_key: \"\",\n          port: \"80\",\n          path: \"\",\n          protocol: \"https\",\n        },\n      ],\n    };\n\n    this.server.cacheSearchResultsForSeconds =\n      this.server.cacheSearchResultsForSeconds == null ? 2 * 60 : this.server.cacheSearchResultsForSeconds;\n\n    this.additionalSearchParameters = options.additionalSearchParameters || {};\n\n    this.additionalSearchParameters.queryBy = this.additionalSearchParameters.queryBy || \"\";\n\n    this.additionalSearchParameters.sortBy = this.additionalSearchParameters.sortBy || \"\";\n\n    this.additionalSearchParameters.highlightFullFields =\n      this.additionalSearchParameters.highlightFullFields || this.additionalSearchParameters.queryBy;\n\n    this.geoLocationField = options.geoLocationField || \"_geoloc\";\n\n    this.collectionSpecificSearchParameters = options.collectionSpecificSearchParameters || {};\n\n    Object.keys(this.collectionSpecificSearchParameters).forEach((collection) => {\n      const overrideHighlightFullFields =\n        this.collectionSpecificSearchParameters[collection].highlightFullFields ||\n        this.collectionSpecificSearchParameters[collection].queryBy;\n      if (overrideHighlightFullFields) {\n        this.collectionSpecificSearchParameters[collection].highlightFullFields = overrideHighlightFullFields;\n      }\n    });\n  }\n\n  /*\n   * Either additionalSearchParameters.queryBy needs to be set, or\n   *   All collectionSpecificSearchParameters need to have queryBy\n   *\n   * */\n  validate() {\n    if (\n      this.additionalSearchParameters.queryBy.length === 0 &&\n      Object.values(this.collectionSpecificSearchParameters).some((c) => (c.queryBy || \"\").length === 0)\n    ) {\n      throw new Error(\n        \"Missing parameter: Either additionalSearchParameters.queryBy needs to be set, or all collectionSpecificSearchParameters need to have .queryBy set\"\n      );\n    }\n  }\n}\n","\"use strict\";\n\nimport { utils } from \"./support/utils\";\n\nexport class FacetSearchResponseAdapter {\n  constructor(typesenseResponse, instantsearchRequest) {\n    this.typesenseResponse = typesenseResponse;\n    this.instantsearchRequest = instantsearchRequest;\n  }\n\n  _adaptFacetHits(typesenseFacetCounts) {\n    let adaptedResult = {};\n    const facet = typesenseFacetCounts.find((facet) => facet.field_name === this.instantsearchRequest.params.facetName);\n\n    adaptedResult = facet.counts.map((facetCount) => ({\n      value: facetCount.value,\n      highlighted: this._adaptHighlightTag(\n        facetCount.highlighted,\n        this.instantsearchRequest.params.highlightPreTag,\n        this.instantsearchRequest.params.highlightPostTag\n      ),\n      count: facetCount.count,\n    }));\n\n    return adaptedResult;\n  }\n\n  adapt() {\n    const adaptedResult = {\n      facetHits: this._adaptFacetHits(this.typesenseResponse.facet_counts),\n      exhaustiveFacetsCount: true,\n      processingTimeMS: this.typesenseResponse.search_time_ms,\n    };\n    return adaptedResult;\n  }\n}\n\nObject.assign(FacetSearchResponseAdapter.prototype, utils);\n","export const utils = {\n  _adaptHighlightTag(value, highlightPreTag, highlightPostTag) {\n    return value\n      .replace(new RegExp(\"<mark>\", \"g\"), highlightPreTag)\n      .replace(new RegExp(\"</mark>\", \"g\"), highlightPostTag);\n  },\n  _adaptNumberOfPages() {\n    const result = this.typesenseResponse.found / this.typesenseResponse.request_params.per_page;\n    if (Number.isFinite(result)) {\n      return Math.ceil(result);\n    } else {\n      return 1;\n    }\n  },\n};\n","import React from \"react\"\nimport \"./App.css\"\nimport {\n\tInstantSearch,\n\tSearchBox,\n\tHits,\n\tPagination,\n\tConfigure,\n} from \"react-instantsearch-dom\"\nimport PropTypes from \"prop-types\"\nimport AnvereInstantSearchAdapter from \"./lib/AnvereInstantsearchAdapter\"\n\nfunction App() {\n\tconst anvereInstantsearchAdapter = new AnvereInstantSearchAdapter({\n\t\tserver: {\n\t\t\tnodes: [\n\t\t\t\t{\n\t\t\t\t\tapplicationId: \"npm\",\n\t\t\t\t\thost: \"imdb.anvere.net\",\n\t\t\t\t\tprotocol: \"https\",\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t})\n\n\tconst searchClient = anvereInstantsearchAdapter.searchClient\n\n\tconst Hit = (props) => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"hit-name\"\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: props?.hit[\"_highlightResult\"].name.value,\n\t\t\t\t\t}}\n\t\t\t\t\thref={`https://www.npmjs.com/package/${props.hit.id}`}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"hit-description\"\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: props?.hit[\"_highlightResult\"].description\n\t\t\t\t\t\t\t.value,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tHit.propTypes = {\n\t\thit: PropTypes.object.isRequired,\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"header\">\n\t\t\t\t<h1 className=\"header-title\">\n\t\t\t\t\t<a href=\"/\">Fast npm search by Anvere</a>\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"header-subtitle\">\n\t\t\t\t\tusing&nbsp;\n\t\t\t\t\t<a href=\"https://github.com/algolia/instantsearch.js\">\n\t\t\t\t\t\tAnvere + InstantSearch.js\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</header>\n\t\t\t<div className=\"container\">\n\t\t\t\t<InstantSearch indexName=\"npm\" searchClient={searchClient}>\n\t\t\t\t\t<SearchBox />\n\t\t\t\t\t\t<Hits hitComponent={Hit} />\n\t\t\t\t\t\t<Configure hitsPerPage={8} />\n\t\t\t\t\t<Pagination />\n\t\t\t\t</InstantSearch>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}